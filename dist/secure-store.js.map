{"version":3,"sources":["webpack://SecureStore/webpack/universalModuleDefinition","webpack://SecureStore/webpack/bootstrap","webpack://SecureStore/./src/index.js","webpack://SecureStore/./node_modules/idb-keyval/dist/idb-keyval.mjs","webpack://SecureStore/./node_modules/web-crypto/src/index.js","webpack://SecureStore/./node_modules/buffer/index.js","webpack://SecureStore/(webpack)/buildin/global.js","webpack://SecureStore/./node_modules/base64-js/index.js","webpack://SecureStore/./node_modules/ieee754/index.js","webpack://SecureStore/./node_modules/isarray/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","idb","crypto","Store","storeName","passphrase","Error","this","store","encryptedKey","genEncryptedMasterKey","set","encMasterKey","decryptMasterKey","e","console","log","oldPass","newPass","updatePassphraseKey","val","encrypt","Promise","async","resolve","reject","decrypt","del","keys","clear","dbName","_dbp","openreq","indexedDB","open","onerror","error","onsuccess","result","onupgradeneeded","createObjectStore","type","callback","then","db","transaction","oncomplete","onabort","objectStore","getDefaultStore","req","_withIDBStore","put","delete","openKeyCursor","openCursor","push","continue","importKey","parsedKey","Buffer","from","subtle","exportKey","exportedKey","Uint8Array","encryptBuffer","data","cipherContext","encrypted","decryptBuffer","decrypted","message","checkCryptokey","genRandomBuffer","len","values","getRandomValues","format","context","iv","algorithm","plaintext","JSON","stringify","ciphertext","toString","parse","genRandomBufferAsStr","encodingFormat","checkEncodingFormat","deriveBits","passPhrase","salt","iterations","hashAlgo","warn","baseKey","derivedKey","hash","deriveKeyFromPassphrase","str","checkPassphrase","derivationParams","protectedMasterKey","encryptedMasterKey","_salt","keyEncryptionKey","decryptedMasterKeyHex","genAESKey","extractable","keySize","generateKey","length","masterKey","currentPassPhrase","newPassPhrase","oldMasterKey","toBeEncryptedMasterKey","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2"],"mappings":"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","file":"secure-store.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SecureStore\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SecureStore\"] = factory();\n\telse\n\t\troot[\"SecureStore\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const idb = require('idb-keyval')\nconst crypto = require('web-crypto')\n\nclass Store {\n  /**\n    * Class constructor\n    *\n    * @param {string} user - The current user\n    * @param {string} passphrase - Passphrase from which we derive the key\n    */\n  constructor (storeName, passphrase) {\n    if (!storeName || !passphrase) {\n      throw new Error('Both username and passphrase are required')\n    }\n    // init store\n    this.store = new idb.Store(storeName, storeName)\n    this.passphrase = passphrase\n  }\n\n  async init () {\n    try {\n      let encryptedKey = await idb.get('__key', this.store)\n      // generate a new key for the user if no key exists (empty store)\n      if (!encryptedKey) {\n        encryptedKey = await crypto.genEncryptedMasterKey(this.passphrase)\n        // store the new key since it's the first time\n        await idb.set('__key', encryptedKey, this.store)\n      }\n      // decrypt key so we can use it during this session\n      this.encMasterKey = encryptedKey\n      this.key = await crypto.decryptMasterKey(this.passphrase, this.encMasterKey)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  async updatePassphrase (oldPass, newPass) {\n    const encryptedKey = await crypto.updatePassphraseKey(oldPass, newPass, this.encMasterKey)\n    await idb.set('__key', encryptedKey, this.store)\n    this.encMasterKey = encryptedKey\n  }\n\n  async set (key, val) {\n    val = await crypto.encrypt(this.key, val)\n    return idb.set(key, val, this.store)\n  }\n\n  async get (key) {\n    return new Promise(async (resolve, reject) => {\n      let val\n      try {\n        val = await idb.get(key, this.store)\n      } catch (e) {\n        reject(e)\n      }\n      // decrypt data before returning it\n      resolve(await crypto.decrypt(this.key, val))\n    })\n  }\n\n  del (key) {\n    return idb.del(key, this.store)\n  }\n\n  keys () {\n    return idb.keys(this.store)\n  }\n\n  clear () {\n    return idb.clear(this.store)\n  }\n}\n\nmodule.exports = {\n  Store,\n  crypto\n}\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","/**\n * Originally from https://github.com/QwantResearch/masq-common/ with modifications\n * by Andrei Sambra\n */\n\n/**\n   * Generate an AES key based on the cipher mode and keysize\n   * @param {boolean} [extractable] - Specify if the generated key is extractable\n   * @param {string} [mode] - The aes mode of the generated key\n   * @param {Number} [keySize] - Specify if the generated key is extractable\n   * @returns {Promise<CryptoKey>} - The generated AES key.\n   */\nconst genAESKey = (extractable, mode = 'AES-GCM', keySize = 128) => {\n  return window.crypto.subtle.generateKey({\n    name: mode,\n    length: keySize\n  }, extractable || true, ['decrypt', 'encrypt'])\n}\n\n/**\n    * Import a raw|jwk as a CryptoKey\n    *\n    * @param {arrayBuffer|Object} key - The key\n    * @param {string} [type] - The type of the key to import ('raw', 'jwk')\n    * @param {string} [mode] - The mode of the key to import (default 'AES-GCM')\n    * @returns {Promise<arrayBuffer>} - The cryptoKey\n    */\nconst importKey = (key, type = 'raw', mode = 'AES-GCM') => {\n  const parsedKey = Buffer.from(key, 'base64')\n  return window.crypto.subtle.importKey(type, parsedKey, { name: mode }\n    , true, ['encrypt', 'decrypt'])\n}\n\n/**\n  * Export a CryptoKey into a raw|jwk key\n  *\n  * @param {CryptoKey} key - The CryptoKey\n  * @param {string} [type] - The type of the exported key\n  * @returns {Promise<arrayBuffer>} - The raw key or the key as a jwk format\n  */\nconst exportKey = async (key, type = 'raw') => {\n  const exportedKey = await window.crypto.subtle.exportKey(type, key)\n  if (type === 'raw') return new Uint8Array(exportedKey)\n  return exportedKey\n}\n\n/**\n   * Encrypt buffer\n   *\n   * @param {ArrayBuffer} key - The AES CryptoKey\n   * @param {ArrayBuffer} data - Data to encrypt\n   * @param {Object} cipherContext - The AES cipher parameters\n   * @returns {ArrayBuffer} - The encrypted buffer\n   */\nconst encryptBuffer = async (key, data, cipherContext) => {\n  const encrypted = await window.crypto.subtle.encrypt(cipherContext, key, data)\n  return new Uint8Array(encrypted)\n}\n\n/**\n * Decrypt buffer\n * @param {ArrayBuffer} key - The AES CryptoKey\n * @param {ArrayBuffer} data - Data to decrypt\n * @param {Object} cipherContext - The AES cipher parameters\n * @returns {Promise<ArrayBuffer>} - The decrypted buffer\n */\nconst decryptBuffer = async (key, data, cipherContext) => {\n  // TODO: test input params\n  try {\n    const decrypted = await window.crypto.subtle.decrypt(cipherContext, key, data)\n    return new Uint8Array(decrypted)\n  } catch (e) {\n    if (e.message === 'Unsupported state or unable to authenticate data') {\n      throw new Error('Unable to decrypt data')\n    }\n  }\n}\n\nconst checkCryptokey = (key) => {\n  if (!key.type || key.type !== 'secret') {\n    throw new Error('Invalid key type')\n  }\n}\n\nconst genRandomBuffer = (len = 16) => {\n  const values = window.crypto.getRandomValues(new Uint8Array(len))\n  return Buffer.from(values)\n}\n\n/**\n * Encrypt data\n *\n * @param {CryptoKey} key - The AES CryptoKey\n * @param {string | Object} - The data to encrypt\n * @param {string} [format] - The ciphertext and iv encoding format\n * @returns {Object} - The stringified ciphertext object (ciphertext and iv)\n */\nconst encrypt = async (key, data, format = 'hex') => {\n  checkCryptokey(key)\n  const context = {\n    iv: genRandomBuffer(key.algorithm.name === 'AES-GCM' ? 12 : 16),\n    plaintext: Buffer.from(JSON.stringify(data))\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n\n  const encrypted = await encryptBuffer(key, context.plaintext, cipherContext)\n  return {\n    ciphertext: Buffer.from(encrypted).toString(format),\n    iv: Buffer.from(context.iv).toString(format)\n  }\n}\n\n/**\n   * Decrypt data\n   *\n   * @param {CryptoKey} key - The AES CryptoKey\n   * @param {string | Object} - The data to encrypt\n   * @param {string} [format] - The ciphertext and iv encoding format\n   */\nconst decrypt = async (key, ciphertext, format = 'hex') => {\n  checkCryptokey(key)\n\n  const context = {\n    ciphertext: Object.prototype.hasOwnProperty.call(ciphertext, 'ciphertext') ? Buffer.from(ciphertext.ciphertext, (format)) : '',\n    // IV is 128 bits long === 16 bytes\n    iv: Object.prototype.hasOwnProperty.call(ciphertext, 'iv') ? Buffer.from(ciphertext.iv, (format)) : ''\n  }\n\n  // Prepare cipher context, depends on cipher mode\n  const cipherContext = {\n    name: key.algorithm.name,\n    iv: context.iv\n  }\n  try {\n    const decrypted = await decryptBuffer(key, context.ciphertext, cipherContext)\n    return JSON.parse(Buffer.from(decrypted).toString())\n  } catch (error) {\n    throw new Error('Unable to decrypt data')\n  }\n}\n\nconst checkPassphrase = (str) => {\n  if (typeof str !== 'string' || str === '') {\n    throw new Error(`Not a valid value`)\n  }\n}\n\nconst checkEncodingFormat = (format) => {\n  if (format !== 'hex' && format !== 'base64') throw new Error('Invalid encoding')\n}\n\nconst genRandomBufferAsStr = (len = 16, encodingFormat = 'hex') => {\n  if (encodingFormat) {\n    checkEncodingFormat(encodingFormat)\n  }\n  const buf = genRandomBuffer(len)\n  return buf.toString(encodingFormat)\n}\n\n/**\n * Generate a PBKDF2 derived key (bits) based on user given passPhrase\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation\n * @returns {Promise<Uint8Array>} A promise that contains the derived key\n */\nconst deriveBits = async (passPhrase, salt, iterations, hashAlgo) => {\n  // Always specify a strong salt\n  if (iterations < 10000) { console.warn('Less than 10000 :(') }\n\n  const baseKey = await window.crypto.subtle.importKey(\n    'raw',\n    (typeof passPhrase === 'string') ? Buffer.from(passPhrase) : passPhrase,\n    'PBKDF2',\n    false,\n    ['deriveBits', 'deriveKey']\n  )\n  const derivedKey = await window.crypto.subtle.deriveBits({\n    name: 'PBKDF2',\n    salt: salt || new Uint8Array([]),\n    iterations: iterations || 100000,\n    hash: hashAlgo || 'SHA-256'\n  }, baseKey, 128)\n\n  return new Uint8Array(derivedKey)\n}\n\n/**\n * Derive a key based on a given passphrase\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<keyEncryptionKey>} A promise that contains the derived key and derivation\n * parameters\n */\nconst deriveKeyFromPassphrase = async (passPhrase, salt = genRandomBuffer(16), iterations = 100000, hashAlgo = 'SHA-256') => {\n  checkPassphrase(passPhrase)\n\n  const derivedKey = await deriveBits(passPhrase, salt, iterations, hashAlgo)\n  const key = await importKey(derivedKey)\n  return {\n    derivationParams: {\n      salt: Buffer.from(salt).toString('hex'),\n      iterations,\n      hashAlgo\n    },\n    key\n  }\n}\n\n/**\n * Derive the passphrase with PBKDF2 to obtain a KEK\n * Generate a AES key (masterKey)\n * Encrypt the masterKey with the KEK\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>} A promise that contains the encrypted derived key\n */\nconst genEncryptedMasterKey = async (passPhrase, salt, iterations, hashAlgo) => {\n  // derive key encryption key from passphrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(passPhrase, salt, iterations, hashAlgo)\n\n  // Generate the masterKey\n  const masterKey = await genRandomBufferAsStr(32, 'hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, masterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Update the derived encryption key (KEK) based on the new passphrase from user, while retaining\n * the symmetric key that encrypts data at rest\n *\n * @param {string | arrayBuffer} currentPassPhrase The current (old) passphrase that is used to derive the key\n * @param {string | arrayBuffer} newPassPhrase The new passphrase that will be used to derive the key\n * @param {oldMasterKey} oldMasterKey - The old object returned by genEncryptedMasterKey for the old passphrase\n * @param {arrayBuffer} [salt] The salt\n * @param {Number} [iterations] The iterations number\n * @param {string} [hashAlgo] The hash function used for derivation and final hash computing\n * @returns {Promise<protectedMasterKey>}\n */\nconst updatePassphraseKey = async (currentPassPhrase, newPassPhrase, oldMasterKey, salt, iterations, hashAlgo) => {\n  const masterKey = await decryptMasterKey(currentPassPhrase, oldMasterKey)\n  // derive a new key encryption key from newPassPhrase\n  const keyEncryptionKey = await deriveKeyFromPassphrase(newPassPhrase, salt, iterations, hashAlgo)\n\n  // enconde existing masterKey as a hex string since it's a buffer\n  const toBeEncryptedMasterKey = Buffer.from(await exportKey(masterKey)).toString('hex')\n\n  const encryptedMasterKey = await encrypt(keyEncryptionKey.key, toBeEncryptedMasterKey)\n\n  return {\n    derivationParams: keyEncryptionKey.derivationParams,\n    encryptedMasterKey\n  }\n}\n\n/**\n * Decrypt a master key by deriving the encryption key from the\n * provided passphrase and encrypted master key.\n *\n * @param {string | arrayBuffer} passPhrase The passphrase that is used to derive the key\n * @param {protectedMasterKey} protectedMasterKey - The same object returned\n * by genEncryptedMasterKey\n * @returns {Promise<masterKey>} A promise that contains the masterKey\n */\nconst decryptMasterKey = async (passPhrase, protectedMasterKey) => {\n  const { derivationParams, encryptedMasterKey } = protectedMasterKey\n  const { salt, iterations, hashAlgo } = derivationParams\n  const _salt = typeof (salt) === 'string' ? Buffer.from(salt, ('hex')) : salt\n  const derivedKey = await deriveBits(passPhrase, _salt, iterations, hashAlgo)\n  const keyEncryptionKey = await importKey(derivedKey)\n  try {\n    const decryptedMasterKeyHex = await decrypt(keyEncryptionKey, encryptedMasterKey)\n    // return decryptedMasterKeyHex\n    const parsedKey = Buffer.from(decryptedMasterKeyHex, 'hex')\n    return window.crypto.subtle.importKey('raw', parsedKey, { name: 'AES-GCM' }\n      , true, ['encrypt', 'decrypt'])\n  } catch (error) {\n    throw new Error('Wrong passphrase')\n  }\n}\n\nmodule.exports = {\n  genAESKey,\n  importKey,\n  exportKey,\n  encrypt,\n  decrypt,\n  encryptBuffer,\n  decryptBuffer,\n  genEncryptedMasterKey,\n  decryptMasterKey,\n  updatePassphraseKey\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}